% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_suppression.R
\name{determine_cell_suppression}
\alias{determine_cell_suppression}
\alias{suppress_secondary}
\title{Determine cells to suppress in a contingency table}
\usage{
determine_cell_suppression(N, nullspace, small_min = 1L, small_max = 4L, ...)

suppress_secondary(
  N,
  suppress,
  nullspace,
  LPL = 0L,
  UPL = 0L,
  SPL = 1L,
  w = N,
  LB = N,
  UB = N,
  ...,
  solver = "highs",
  max_iter = 100L
)
}
\arguments{
\item{N}{The variable containing counts.}

\item{nullspace}{A matrix representation of the table total and subtotal
relationships. For any vector N that has valid totals and subtotals,
\code{nullspace \%*\% N} should be a zero vector.}

\item{small_min, small_max}{The bounds for small cells which must be
suppressed. Cells will be suppressed if they lie between these two bounds,
inclusive.}

\item{...}{For \code{suppress_secondary}, passed to \link[ROI:ROI_solve]{ROI::ROI_solve}. For
\code{determine_cell_suppression}: Passed to \code{suppress_secondary}.}

\item{suppress}{A logical vector of the same size as \code{N} that is \code{TRUE} for
cells that should be primary suppressed, and \code{FALSE} otherwise.}

\item{LPL, UPL, SPL}{Lower, upper and sliding protection limits, respectively,
which determine back-calculation sensitivity. See references for more
details. The default prevents exact recalculation.}

\item{w}{The "weight" we assign to each cell to prevent suppression. A vector
of the same size as \code{N}. By default, we minimise total count suppressed.
Other options include \code{log(N)}, which prioritises smaller cells.}

\item{LB, UB}{The relative lower and upper bounds of each cell assumed known
to the attacker. A vector of the same size as \code{N}. By default, the attacker
knows that any cell is between 0 and double its true value.}

\item{solver}{The solver used for \link[ROI:ROI_solve]{ROI::ROI_solve}.}

\item{max_iter}{The maximum number of times to attack each cell requiring
suppression.}
}
\value{
Both these functions return a logical vector of cells that need to be
suppressed
}
\description{
These functions implement primary and secondary suppression in a contingency
table according to the algorithm from Fischetti and Salazar (2001). Given a
table in long format and the margins the table is summed over, this function
gives a logical vector of the the cells that need to be suppressed to prevent
back-calculation.
}
\details{
\code{determine_cell_suppression} performs primary suppression of cells between
the \code{small_min} and \code{small_max} thresholds (inclusive), and then performs
secondary suppression to prevent back-calculation. \code{suppress_secondary} takes
a logical vector that represents a primary suppression, and only performs
secondary suppression on this. This allows more flexibility in the
suppression requirements (e.g. by allowing small cells to be visible if they
belong to "Unknown" values).
}
\references{
Fischetti M, Salazar JJ. Solving the cell suppression problem on
tabular data with linear constraints. Management Science.
2001;47(7):1008-1027.
\url{https://www.proquest.com/scholarly-journals/solving-cell-suppression-problem-on-tabular-data/docview/213175964/se-2?accountid=147118}
}
