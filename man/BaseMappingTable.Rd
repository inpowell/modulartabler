% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapping_table.R
\name{BaseMappingTable}
\alias{BaseMappingTable}
\title{R6 class representing a mapping table for a single dimension.}
\description{
R6 class representing a mapping table for a single dimension.

R6 class representing a mapping table for a single dimension.
}
\details{
This mapping table class defines the structure for a single dimension of a
count table.
}
\section{Super class}{
\code{\link[modulartabler:MappingTable]{modulartabler::MappingTable}} -> \code{BaseMappingTable}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{mraw}}{The raw-side data that correspond to rows of the matrix
representation.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BaseMappingTable-new}{\code{BaseMappingTable$new()}}
\item \href{#method-BaseMappingTable-clone}{\code{BaseMappingTable$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="modulartabler" data-topic="MappingTable" data-id="count_aggregate"><a href='../../modulartabler/html/MappingTable.html#method-MappingTable-count_aggregate'><code>modulartabler::MappingTable$count_aggregate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="modulartabler" data-topic="MappingTable" data-id="preprocess"><a href='../../modulartabler/html/MappingTable.html#method-MappingTable-preprocess'><code>modulartabler::MappingTable$preprocess()</code></a></span></li>
<li><span class="pkg-link" data-pkg="modulartabler" data-topic="MappingTable" data-id="print"><a href='../../modulartabler/html/MappingTable.html#method-MappingTable-print'><code>modulartabler::MappingTable$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseMappingTable-new"></a>}}
\if{latex}{\out{\hypertarget{method-BaseMappingTable-new}{}}}
\subsection{Method \code{new()}}{
Create a new mapping table object. The order of column names
in \code{raw_cols}, \code{table_cols}, and \code{data_cols} should match.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseMappingTable$new(map, raw_cols, table_cols, data_cols = raw_cols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{map}}{A data frame defining the structure of the presentation
table in terms of raw columns. Note that the raw columns must have the
same type and values in the raw dataset to count, so factors should
match to factors, character to character. This is particularly
important for ordered factors.}

\item{\code{raw_cols}}{The names of raw columns in \code{map}.}

\item{\code{table_cols}}{The names of presentation columns in \code{map}.}

\item{\code{data_cols}}{The names of raw columns in the raw data. This is only
necessary if \code{raw_cols} does not match the names in the raw data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{MappingTable} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseMappingTable-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BaseMappingTable-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseMappingTable$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
